let mapleader = " "

nmap J mzJ`z
nmap <C-d> <C-d>zz
nmap <C-u> <C-u>zz

nmap n nzzzv
nmap N Nzzzv

xmap <leader>p "_dP
nmap <leader>y "+y
vmap <leader>y "+y
nmap <leader>Y "+Y
nmap <leader>d "_d
vmap <leader>d "_d

nmap <C-k> <Cmd>cnext<CR>zz
nmap <C-j> <Cmd>cprev<CR>zz

nmap <leader>k <Cmd>lnext<CR>zz
nmap <leader>j <Cmd>lprev<CR>zz

imap <C-j> <CR>
map Q gq

set nu
set relativenumber
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab
set smartindent
set nowrap
set nohlsearch
set incsearch
set scrolloff=8
set signcolumn=yes
set updatetime=50
set colorcolumn=80

nmap / :action Find<CR>
nmap <leader>pg :action FindInPath<CR>
nmap <leader>pf :action SearchEverywhere<CR>
nmap <leader>ds :action FileStructurePopup<CR>
nmap <leader>ws :action GotoSymbol<CR>
nmap <leader>pv :action ActivateProjectToolWindow<CR>
nmap <leader>gs :action Git.Menu<CR>
nmap <leader><leader> :action RecentFiles<CR>
nmap <leader>ttw <Action>(ActivateTerminalToolWindow)
nmap <leader>rtw <Action>(ActivateRunToolWindow)
nmap <leader>dtw <Action>(ActivateDebugToolWindow)
nmap <leader>haw <Action>(HideAllWindows)

map gi <Action>(GotoImplementation)
map gd <Action>(GotoDeclaration)
map gr <Action>(ShowUsages)
nmap <leader>vca :action ShowIntentionActions<CR>
map ]d <Action>(GotoNextError)
map [d <Action>(GotoPreviousError)
map <leader>vrn <Action>(RenameElement)

map <leader>rcf <Action>(ChooseRunConfiguration)
map <leader>dcf <Action>(ChooseDebugConfiguration)

Plug 'machakann/vim-highlightedyank'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-surround'
Plug 'terryma/vim-multiple-cursors'

xmap <C-n> <Plug>NextWholeOccurrence
xmap <C-x> <Plug>SkipOccurrence
xmap <C-p> <Plug>RemoveOccurrence
let g:highlightedyank_highlight_duration = "100"
